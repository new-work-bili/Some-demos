[{"D:\\其他\\HTML\\教程\\小demo\\TypeScript\\typescript-tea\\src\\index.tsx":"1","D:\\其他\\HTML\\教程\\小demo\\TypeScript\\typescript-tea\\src\\reportWebVitals.ts":"2","D:\\其他\\HTML\\教程\\小demo\\TypeScript\\typescript-tea\\src\\App.tsx":"3"},{"size":500,"mtime":1608455904709,"results":"4","hashOfConfig":"5"},{"size":425,"mtime":1608455904709,"results":"6","hashOfConfig":"5"},{"size":4027,"mtime":1608473941710,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1hyqww5",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"D:\\其他\\HTML\\教程\\小demo\\TypeScript\\typescript-tea\\src\\index.tsx",[],["16","17"],"D:\\其他\\HTML\\教程\\小demo\\TypeScript\\typescript-tea\\src\\reportWebVitals.ts",[],"D:\\其他\\HTML\\教程\\小demo\\TypeScript\\typescript-tea\\src\\App.tsx",["18","19","20"],"import React, { useState, useRef } from \"react\";\nimport {\n  List,\n  Avatar,\n  Button,\n  Typography,\n  Form,\n  Input,\n  Select,\n  DatePicker,\n  Menu,\n  Dropdown,\n  Tabs\n} from \"antd\";\nimport { DownOutlined } from \"@ant-design/icons\";\n\nimport \"./App.css\";\nimport logo from \"./logo.svg\";\n\nconst { Title } = Typography;\nconst { Option } = Select;\nconst { TabPane } = Tabs;\n\nconst todoListData = [\n  {\n    content: \"图雀社区：汇聚精彩的免费实战教程\",\n    user: \"mRcfps\",\n    time: \"2020年3月2日 19:34\",\n    isCompleted: false\n  },\n  {\n    content: \"图雀社区：汇聚精彩的免费实战教程\",\n    user: \"pftom\",\n    time: \"2020年3月2日 19:34\",\n    isCompleted: false\n  },\n  {\n    content: \"图雀社区：汇聚精彩的免费实战教程\",\n    user: \"Holy\",\n    time: \"2020年3月2日 19:34\",\n    isCompleted: false\n  },\n  {\n    content: \"图雀社区：汇聚精彩的免费实战教程\",\n    user: \"crxk\",\n    time: \"2020年3月2日 19:34\",\n    isCompleted: false\n  },\n  {\n    content: \"图雀社区：汇聚精彩的免费实战教程\",\n    user: \"Pony\",\n    time: \"2020年3月2日 19:34\",\n    isCompleted: false\n  }\n];\n\nconst userList = [\n  {\n    id: \"666666666\",\n    name: \"图雀社区\",\n    avatar: \"https://avatars0.githubusercontent.com/u/39240800?s=60&v=4\"\n  },\n  {\n    id: \"23410977\",\n    name: \"mRcfps\",\n    avatar: \"https://avatars0.githubusercontent.com/u/23410977?s=96&v=4\"\n  },\n  {\n    id: \"25455350\",\n    name: \"crxk\",\n    avatar: \"https://avatars1.githubusercontent.com/u/25455350?s=96&v=4\"\n  },\n  {\n    id: \"23410977\",\n    name: \"pftom\",\n    avatar: \"https://avatars0.githubusercontent.com/u/23410977?s=96&v=4\"\n  },\n  {\n    id: \"58352313\",\n    name: \"holy\",\n    avatar: \"https://avatars0.githubusercontent.com/u/58352313?s=96&v=4\"\n  }\n];\n\nconst menu = (\n  <Menu>\n    <Menu.Item>完成</Menu.Item>\n    <Menu.Item>删除</Menu.Item>\n  </Menu>\n);\n\nconst TodoInput = ({ value = {} }) => {\n  return (\n    <div className=\"todoInput\">\n      <Input type=\"text\" placeholder=\"输入待办事项内容\" />\n      <Select style={{ width: 80 }} size=\"small\" defaultValue=\"666666666\">\n        {userList.map(user => (\n          <Option value={user.id}>{user.name}</Option>\n        ))}\n      </Select>\n      <DatePicker\n        size=\"small\"\n        style={{ marginLeft: \"16px\", marginRight: \"16px\" }}\n      />\n    </div>\n  );\n};\n\nfunction TodoList() {\n  return (\n    <List\n      className=\"demo-loadmore-list\"\n      itemLayout=\"horizontal\"\n      dataSource={todoListData}\n      renderItem={item => (\n        <List.Item\n          actions={[\n            <Dropdown overlay={menu}>\n              <a key=\"list-loadmore-more\">\n                操作 <DownOutlined />\n              </a>\n            </Dropdown>\n          ]}\n        >\n          <List.Item.Meta\n            avatar={\n              <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n            }\n            title={<a href=\"https://ant.design\">{item.user}</a>}\n            description={item.time}\n          />\n          <div>{item.content}</div>\n        </List.Item>\n      )}\n    />\n  );\n}\n\nexport default function App() {\n  const callback = () => {};\n\n  const onFinish = () => {};\n  const ref = useRef(null);\n\n  return (\n    <div className=\"App\" ref={ref}>\n      <div className=\"container header\">\n        <img src={logo} alt=\"\" />\n        <Title level={3}>图雀社区：汇聚精彩的免费实战教程</Title>\n      </div>\n      <div className=\"container\">\n        <Form onFinish={onFinish}>\n          <Form.Item name=\"todo\">\n            <TodoInput />\n          </Form.Item>\n        </Form>\n      </div>\n      <div className=\"container\">\n        <Tabs onChange={callback} type=\"card\">\n          <TabPane tab=\"所有\" key=\"1\">\n            <TodoList />\n          </TabPane>\n          <TabPane tab=\"进行中\" key=\"2\">\n            <TodoList />\n          </TabPane>\n          <TabPane tab=\"已完成\" key=\"3\">\n            <TodoList />\n          </TabPane>\n        </Tabs>\n      </div>\n    </div>\n  );\n}\n // ...\n",{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","severity":1,"message":"26","line":1,"column":17,"nodeType":"27","messageId":"28","endLine":1,"endColumn":25},{"ruleId":"25","severity":1,"message":"29","line":5,"column":3,"nodeType":"27","messageId":"28","endLine":5,"endColumn":9},{"ruleId":"30","severity":1,"message":"31","line":119,"column":15,"nodeType":"32","endLine":119,"endColumn":43},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]